# Copy this to docker-compose.override.yml and modify as needed.  This file
# adds some dev-friendly container magic to the mix:
#
# - All binaries are mounted into the container so you can test out local changes
# - RAIS directly exposes its port to the host machine for quick debugging
# - The rais container describes how to build itself so you can change the
#   internals (docker/Dockerfile) during development.  You may have to wait a
#   bit for it to build on first run.  You can also run `docker-compose build`
#   or `make docker` to rebuild the build and server images at any time.
#
# Note that docker-compose.override.yml is only automatically used if you
# *don't* specify a compose file.  e.g., `docker-compose up` will use
# docker-compose.yml and docker-compose.override.yml (if present).  But
# `docker-compose -f docker-compose.yml` will *not* use the override file.  If
# you wanted to use this with, for instance, datadog, you'd have to merge the
# datadog config with the overrides or else set up something like this:
#
#     alias ddog='docker-compose -f docker-compose.yml -f docker-compose.datadog.yml -f docker-compose.override.yml'
version: "3.4"
services:
  rais:
    build:
      context: ./docker
    environment:
      # These next lines would allow you to pass the various S3 configuration
      # options through from the host's environment (or the local .env file)
      - RAIS_S3CACHE
      - RAIS_S3ZONE
      - RAIS_S3BUCKET
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
      # If you wanted to use a configured AWS credentials file for s3, do this
      # and then see the volume config below
      - AWS_SHARED_CREDENTIALS_FILE=/etc/aws.credentials
    volumes:
      # Mount in binaries
      - ./bin/rais-server:/opt/rais/rais-server:ro
      # Mount in all plugins.  Note that this is probably *not* what you want
      # in production - you will want to be more selective to ensure you never
      # accidentally mount the external images plugin!
      - ./bin/plugins:/opt/rais/plugins:ro
      # Volume config (modify source) for using an AWS credentials file
      - /home/myuser/.aws/credentials:/etc/aws.credentials
    entrypoint: /entrypoint.sh
    ports:
      - 12415:12415
