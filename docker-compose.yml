# This describes a self-contained demo of RAIS, using nginx to serve up the
# static pages.  This isn't a production configuration file!!
#
# If you don't set up an override file (docker-compose.override-example.yml,
# for instance), this will just use the stable version of RAIS from dockerhub.
#
# Put JP2s into docker/images and the apache entrypoint script will add them to
# the images served by from RAIS.
#
# Note that the "rais-build" container may seem entirely unnecessary here, and
# takes a few minutes to initially build.  However, it is very helpful when any
# kind of custom building needs to happen, such as using the datadog plugin or
# doing local development.  It's simply easier to know it'll be available than
# to have commands that fail in potentially confusing ways.
version: "3.4"

volumes:
  gopkg: {}
  gocache: {}

services:
  rais-build:
    build:
      context: ./docker
      target: build
    volumes:
      - ./:/opt/rais-src:rw
      - ./docker/images:/var/local/images:ro
      - gocache:/root/.cache/go-build
      - gopkg:/usr/local/go/pkg
    command: make

  rais:
    image: uolibraries/rais
    environment:
      - URL
      - RAIS_ADDRESS
      - RAIS_LOGLEVEL
      - RAIS_TILEPATH
      - RAIS_IIIFURL
      - RAIS_INFOCACHELEN
      - RAIS_TILECACHELEN
      - RAIS_IMAGEMAXAREA
      - RAIS_IMAGEMAXWIDTH
      - RAIS_IMAGEMAXHEIGHT
    volumes:
      - ./docker/images:/var/local/images:ro
      - ./rais-example.toml:/etc/rais-template.toml:ro
      - ./cap-max.toml:/etc/rais-capabilities.toml:ro
      - ./docker/demo-rais-entry.sh:/entrypoint.sh:ro
    entrypoint: /entrypoint.sh

  web:
    image: nginx:1.15
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/images:/var/local/images:ro
      - ./docker/static:/static:ro
      - ./docker/demo-web-entry.sh:/entrypoint.sh:ro
    entrypoint: /entrypoint.sh
    depends_on:
      - rais
    ports:
      - 80:80
