# This file describes how you could add the S3 plugin in RAIS.  The base image
# already includes this plugin, so this file simply helps show you what you
# need to configure in order to make it work.
#
# Note that testing S3 from docker-compose is a bit of a pain right now:
# - Put the S3 configuration elements into rais-example.toml (S3Cache, S3Zone,
#   S3Bucket) or the .env file (RAIS_S3CACHE, RAIS_S3BUCKET, RAIS_S3ZONE)
# - Copy your AWS S3 credentials into ./docker/s3credentials
# - Alter the tileSources array in docker/static/template.html to add S3
#   sources.  e.g., this would grab "folder/test-1.jp2" and "folder/test-2.jp2"
#   from your configured S3 bucket (instead of the usual demo images):
#
#       ...
#       prefixUrl: "/osd/images/",
#       tileSources: [
#         "/images/iiif/s3:folder%2Ftest-1.jp2/info.json",
#         "/images/iiif/s3:folder%2Ftest-2.jp2/info.json",
#       ],
#       sequenceMode: true,
#       ...
#
# Running this file alongside others may require some aliasing of
# docker-compose to simplify, much as is demonstrated in the override example
# and the datadog example:
#
#     alias s3='docker-compose -f docker-compose.yml -f docker-compose.s3.yml -f docker-compose.override.yml'
version: "3.4"
services:
  rais:
    environment:
      - RAIS_S3CACHE
      - RAIS_S3ZONE
      - RAIS_S3BUCKET
      - AWS_SHARED_CREDENTIALS_FILE=/etc/aws.credentials
    volumes:
      - ./docker/s3credentials:/etc/aws.credentials
      - ./bin/plugins/s3-images.so:/opt/rais/plugins/s3-images.so:ro
